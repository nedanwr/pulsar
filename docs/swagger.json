{
  "openapi": "3.0.0",
  "info": {
    "title": "Pulsar API",
    "description": "An api-only, discord-like, and open-source chat application.",
    "version": "1.0.0"
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The user's id",
            "format": "uuid",
            "example": "e8251c31-361d-4366-98d3-4865799f3652"
          },
          "username": {
            "type": "string",
            "description": "The user's username, not unique",
            "example": "Ray"
          },
          "discriminator": {
            "type": "string",
            "description": "The user's 4-digit pulsar-tag",
            "example": "1954"
          },
          "email": {
            "type": "string",
            "description": "The user's email",
            "format": "email",
            "example": "ray@rayliotta.com"
          },
          "verified": {
            "type": "boolean",
            "description": "Whether the email on this account has been verified",
            "format": "boolean",
            "default": false
          },
          "createdAt": {
            "type": "number",
            "description": "The unix timestamp of when this user was created",
            "format": "unix",
            "example": -474595200
          }
        }
      },
      "Server": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The server's id.",
            "format": "uuid",
            "example": "901de2f7-99fd-496f-bbab-6026d7a576aa"
          },
          "name": {
            "type": "string",
            "description": "The server's name.",
            "example": "The Real Goodfellas",
            "required": true
          },
          "description": {
            "type": "string",
            "description": "The server's description.",
            "example": "Server for the original cast of Goodfellas",
            "required": false
          },
          "createdAt": {
            "type": "number",
            "description": "The unix timestamp of when this server was created.",
            "format": "unix",
            "example": 653702400
          },
          "updatedAt": {
            "type": "number",
            "description": "The unix timestamp of when this server was last updated.",
            "format": "unix",
            "default": null
          }
        }
      }
    }
  },
  "paths": {
    "/auth/user": {
      "post": {
        "summary": "Create a new user",
        "description": "Create a new Pulsar user",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "The preferred username of the user",
                    "example": "Ray"
                  },
                  "email": {
                    "type": "string",
                    "description": "The email address of the user",
                    "example": "ray@goodfellas.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "The preferred password of the user",
                    "minimum": 8,
                    "maximum": 256
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Error in request body"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/auth": {
      "post": {
        "summary": "Login",
        "description": "Log in to Pulsar",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The email address of the user",
                    "example": "ray@goodfellas.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "The password used by the user while creating their account"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "default": "User logged in successfully"
                    },
                    "accessToken": {
                      "type": "string",
                      "description": "Returns a JWT Token"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error in request body"
          },
          "404": {
            "description": "User not found"
          },
          "401": {
            "description": "Invalid password"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/user/@me": {
      "get": {
        "summary": "Get Current User",
        "description": "Returns a user object of the requester's account",
        "tags": ["Users"],
        "security": [{
          "bearerAuth": []
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "patch": {
        "summary": "Modify Current User",
        "description": "Modify the requester's user account settings. Returns a user object on success.",
        "tags": ["Users"],
        "security": [{
          "bearerAuth": []
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "One of the two properties are required, otherwise a 400 status is returned.",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "The preferred username of the user",
                    "example": "Ray Liotta"
                  },
                  "email": {
                    "type": "string",
                    "description": "The email address of the user",
                    "example": "liotta@rayliotta.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Error in request body"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/user/{user.id}": {
      "get": {
        "summary": "Get User",
        "description": "Returns the user object for a given user ID",
        "tags": ["Users"],
        "security": [{
          "bearerAuth": []
        }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/server": {
      "post": {
        "summary": "Create Server",
        "description": "Create a new server. Returns a guild object on success.",
        "tags": ["Server"],
        "security": [{
          "bearerAuth": []
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the server",
                    "example": "The Real Goodfellas",
                    "required": true
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the server",
                    "example": "Server for the original cast of Goodfellas",
                    "required": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Server created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Server"
                }
              }
            }
          },
          "400": {
            "description": "Error in request body"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    }
  }
}